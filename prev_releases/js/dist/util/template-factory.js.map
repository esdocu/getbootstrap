{"version":3,"file":"template-factory.js","sources":["../../src/util/template-factory.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.1.3): util/template-factory.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { DefaultAllowlist, sanitizeHtml } from './sanitizer'\nimport { getElement, isElement } from '../util/index'\nimport SelectorEngine from '../dom/selector-engine'\nimport Config from './config'\n\n/**\n * Constants\n */\n\nconst NAME = 'TemplateFactory'\n\nconst Default = {\n  extraClass: '',\n  template: '<div></div>',\n  content: {}, // { selector : text ,  selector2 : text2 , }\n  html: false,\n  sanitize: true,\n  sanitizeFn: null,\n  allowList: DefaultAllowlist\n}\n\nconst DefaultType = {\n  extraClass: '(string|function)',\n  template: 'string',\n  content: 'object',\n  html: 'boolean',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  allowList: 'object'\n}\n\nconst DefaultContentType = {\n  selector: '(string|element)',\n  entry: '(string|element|function|null)'\n}\n\n/**\n * Class definition\n */\n\nclass TemplateFactory extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  getContent() {\n    return Object.values(this._config.content)\n      .map(config => this._resolvePossibleFunction(config))\n      .filter(Boolean)\n  }\n\n  hasContent() {\n    return this.getContent().length > 0\n  }\n\n  changeContent(content) {\n    this._checkContent(content)\n    this._config.content = { ...this._config.content, ...content }\n    return this\n  }\n\n  toHtml() {\n    const templateWrapper = document.createElement('div')\n    templateWrapper.innerHTML = this._maybeSanitize(this._config.template)\n\n    for (const [selector, text] of Object.entries(this._config.content)) {\n      this._setContent(templateWrapper, text, selector)\n    }\n\n    const template = templateWrapper.children[0]\n    const extraClass = this._resolvePossibleFunction(this._config.extraClass)\n\n    if (extraClass) {\n      template.classList.add(...extraClass.split(' '))\n    }\n\n    return template\n  }\n\n  // Private\n  _typeCheckConfig(config) {\n    super._typeCheckConfig(config)\n    this._checkContent(config.content)\n  }\n\n  _checkContent(arg) {\n    for (const [selector, content] of Object.entries(arg)) {\n      super._typeCheckConfig({ selector, entry: content }, DefaultContentType)\n    }\n  }\n\n  _setContent(template, content, selector) {\n    const templateElement = SelectorEngine.findOne(selector, template)\n\n    if (!templateElement) {\n      return\n    }\n\n    content = this._resolvePossibleFunction(content)\n\n    if (!content) {\n      templateElement.remove()\n      return\n    }\n\n    if (isElement(content)) {\n      this._putElementInTemplate(getElement(content), templateElement)\n      return\n    }\n\n    if (this._config.html) {\n      templateElement.innerHTML = this._maybeSanitize(content)\n      return\n    }\n\n    templateElement.textContent = content\n  }\n\n  _maybeSanitize(arg) {\n    return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg\n  }\n\n  _resolvePossibleFunction(arg) {\n    return typeof arg === 'function' ? arg(this) : arg\n  }\n\n  _putElementInTemplate(element, templateElement) {\n    if (this._config.html) {\n      templateElement.innerHTML = ''\n      templateElement.append(element)\n      return\n    }\n\n    templateElement.textContent = element.textContent\n  }\n}\n\nexport default TemplateFactory\n"],"names":["NAME","Default","extraClass","template","content","html","sanitize","sanitizeFn","allowList","DefaultAllowlist","DefaultType","DefaultContentType","selector","entry","TemplateFactory","Config","constructor","config","_config","_getConfig","getContent","Object","values","map","_resolvePossibleFunction","filter","Boolean","hasContent","length","changeContent","_checkContent","toHtml","templateWrapper","document","createElement","innerHTML","_maybeSanitize","text","entries","_setContent","children","classList","add","split","_typeCheckConfig","arg","templateElement","SelectorEngine","findOne","remove","isElement","_putElementInTemplate","getElement","textContent","sanitizeHtml","element","append"],"mappings":"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"}